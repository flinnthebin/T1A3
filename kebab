#!/usr/bin/python3

# kebab - remaps directories and files to use kebab-case naming convention. 
# the kebab-case format was selected as it is not commonly associated with programming languages, making it a convenient choice for organizing a linux filesystem
# the purpose of the script is to simplify and standardize navigation within the filesystem.
# feature 1 - create a backup of the original directory tree in case of user error
# feature 2 - print file information for the items that have been reorganized
# feature 3 - rename a directory tree to kebab case

# use case: standardization of repositories cloned from github to keep navigation across a system uniform.

import sys
import os
import subprocess

def usage():
  if len(sys.argv) < 2:
    print("""kebab - a tool to remap directories and files to kebab case.
    usage: kebab <directory>""")
    sys.exit(1)

def create_backup():
  # create a backup
  return

def analyze_file(file_path):
    file_type = subprocess.getoutput(f"file -b --mime-type {file_path}")
    word_count = subprocess.getoutput(f"wc -w {file_path}")
    return {"file_type": file_type, "word_count": word_count.strip().split()[0]}

def print_analysis_report():
  # collate file analysis, print dict to terminal
  return

def rename():
  # rename a file
  return

def rename_all():
  # rename a series of folders/files with repeat calls to rename
  return

if __name__ == "__main__":
    usage()
    directory_name = sys.argv[1]
    filename = sys.argv[2]
    file_path = os.path.join(directory_name, filename)
    file_analysis = analyze_file(file_path)
    print(file_analysis)
